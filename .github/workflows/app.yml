name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up GCP credentials
      run: |
        echo '${{ secrets.GCP_CREDENTIALS }}' > gcp_credentials.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/gcp_credentials.json" >> $GITHUB_ENV
        echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
        echo "GCP_BUCKET_NAME=${{ secrets.GCP_BUCKET_NAME }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

    - name: Debug - Print Environment Variables
      run: |
        echo "GCP_PROJECT_ID is set: ${{ env.GCP_PROJECT_ID != '' }}"
        echo "GCP_BUCKET_NAME is set: ${{ env.GCP_BUCKET_NAME != '' }}"
        echo "OPENAI_API_KEY is set: ${{ env.OPENAI_API_KEY != '' }}"
        echo "GOOGLE_APPLICATION_CREDENTIALS is set: ${{ env.GOOGLE_APPLICATION_CREDENTIALS != '' }}"

    - name: Run tests
      run: |
        pytest

    - name: Run linter
      run: |
        pylint **/*.py

    - name: Run application
      run: |
        python app.py &
        sleep 10  # Attendre que l'application d√©marre

    - name: Test application
      run: |
        curl http://localhost:5000 || exit 1

    - name: Stop application
      run: |
        pkill -f "python app.py"
